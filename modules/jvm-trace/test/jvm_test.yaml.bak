apiVersion: v1
kind: Namespace
metadata:
  name: jvm-test-ns

---

##apiVersion: v1
##kind: ServiceAccount
##metadata:
##  namespace: jvm-test-ns
##  name: jvm-test-sa
##automountServiceAccountToken: true
##
##---

##apiVersion: rbac.authorization.k8s.io/v1
##kind: Role
##metadata:
##  namespace: jvm-test-ns
##  name: jvm-test-sa-role
##rules:
##- apiGroups: [""]
##  resources: ["endpoints", "services"]
##  verbs: ["get", "list", "watch"]
##- apiGroups: [""]
##  resources: ["events", "namespaces", "pods", "pods/log"]
##  verbs: ["get", "list", "watch"]
##- apiGroups: [""]
##  resources: ["pods/exec"]
##  verbs: ["get", "create"]
##- apiGroups: [""]
##  resources: ["persistenvolumes", "persistentvolumeclaims"]
##  verbs: ["get", "list", "patch", "watch"]
##
##---
##
##apiVersion: rbac.authorization.k8s.io/v1
##kind: RoleBinding
##metadata:
##  namespace: jvm-test-ns
##  name: jvm-test-sa-rolebinding
##roleRef:
##  apiGroup: rbac.authorization.k8s.io
##  kind: Role
##  name: jvm-test-sa-role
##subjects:
##- kind: ServiceAccount
##  namespace: jvm-test-ns
##  name: jvm-test-sa
##
##---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jvm-test
  name: jvm-test
  namespace: jvm-test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jvm-test
  template:
    metadata:
      labels:
        app: jvm-test
    spec:
      nodeSelector:
          eks.amazonaws.com/nodegroup: ng-1
      containers:
        - name: jvm-test-container
          env:
          - name: AWS_REGION
            value: us-west-2
          # AWS JDK image...
          image: amazoncorretto:8
          imagePullPolicy: IfNotPresent
          resources:
              requests:
                memory: 100Mi
          #volumeMounts:
          #  - mountPath: "/tofill"
          #    name: resize-test-pv
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: 
          command: ["/bin/sh"]
          args: ["-c", "cd /tmp && yum install -y tar procps unzip wget python-setuptools && wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -O /tmp/awscliv2.zip && unzip /tmp/awscliv2.zip && ./aws/install && while /bin/true; do /bin/sleep 5; done"]
          # wget https://github.com/s3tools/s3cmd/archive/master.zip && unzip master.zip && cd s3cmd-master && python setup.py install && cd ..
          # wget http://s3tools.org/repo/RHEL_6/s3tools.repo -O /etc/yum.repos.d/s3tools.repo
          # wget https://github.com/s3tools/s3cmd/archive/master.zip -O /tmp/s3-master.zip
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 5
      #serviceAccount: jvm-test-sa
      #serviceAccountName: jvm-test-sa


